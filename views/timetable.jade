extends layout


block extraHead
  if options.showMap
    script(src="https://api.tiles.mapbox.com/mapbox.js/v2.2.1/mapbox.js")
    link(href="https://api.tiles.mapbox.com/mapbox.js/v2.2.1/mapbox.css" rel="stylesheet")

block content
  .content
    if route.route_color
      .route-color(style="background:##{route.route_color};")
    h1.route_name Timetable for #{timetable.route_label}
    h2.service_notes= timetable.service_notes
    
    if options.effectiveDate
      .effective-date Effective #{options.effectiveDate}
    
    table.table-responsive.timetable(id="route_id_#{route.route_id}_direction_#{timetable.direction_id}")
      caption.direction 
      .description= route.description
      .timetable_days= timetable.day_list
      
      if timetable.orientation === 'horizontal'
        colgroup
          col
          each trip, idx in trips
            col(id="trip_id_#{trip.trip_id}" class="run_#{idx} #{(trip.trip_short_name) ? 'trip_short_name_' + trip.trip_short_name : ''}")
        thead
          tr
            th.stop_header(scope="column") Stop
            each trip, idx in trips
              th.run_header(scope="column")
                if trip.trip_short_name 
                  span= trip.trip_short_name 
                else
                  span= 'Run #' + (idx + 1)
                span= options.showDayList ? ' ' + trip.day_list : ''

        tbody
          each stop in stops
            tr.stop_row(id="stop_id_#{stop.stop_id}")
              th(scope="row")
                .stop_name= stop.stop_name
                .stop_code= stop.stop_code
                .stop_description= stop.stop_desc
              
              each trip in stop.trips
                td.stop_time(class="#{trip.classes.join(' ')}")
                  span.stop_time_text!= trip.formatted_time
                  span.stop_time_period= trip.formatted_period
      else
        colgroup
          each stop, idx in stops
            col(id="stop_id_#{stop.stop_id}" class="stop_#{idx}")
        thead
          tr
            each stop, idx in stops
              th.stop_header(scope="column")= stop.stop_name
              
        tbody
          each trip, idx in trips
            tr.trip_row(id="trip_id_#{trip.trip_id}")       
              each stop in stops
                td.stop_time(class="#{stop.trips[idx].classes.join(' ')}")
                  span.stop_time_text!= stop.trips[idx].formatted_time
                  span.stop_time_period= stop.trips[idx].formatted_period

                
    .timetable-bottom
      .notes
        if options.requestStopSymbolUsed
          .note #{options.requestStopSymbol} = Request stop - call for pickup
        if options.noServiceSymbolUsed
          .note #{options.noServiceSymbol} = No service at this timepoint
        
      .calendar_dates
        if specialDates.excludedDates.length
          .excluded_dates Service not provided on:
            each date in specialDates.excludedDates
              div= date
        if specialDates.includedDates.length
          .included_dates Service provided on:
            each date in specialDates.includedDates
              div= date
          
    if options.showMap
      #map.map
        
      script.
        L.mapbox.accessToken = '#{mapboxAccessToken}';
        var map = L.mapbox.map('map', 'mapbox.streets');
        
        var stops = !{JSON.stringify(stops)};
        var markers = L.featureGroup(stops.map(function(stop) {
          var popupContent = '<h2>' + stop.stop_name + '</h2>' + stop.stop_times.join('<br>');
          return L.marker([stop.stop_lat, stop.stop_lon], {title: stop.stop_name}).bindPopup(popupContent);
        })).addTo(map);
  
        map.fitBounds(markers.getBounds());
        
